% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mimf_description.R
\name{period}
\alias{period}
\alias{mean_amplitude}
\alias{summary.mimf}
\alias{print.summary.mimf}
\title{Basic summary of an mimf object}
\usage{
period(object, tt = attr(object, "tt"))

mean_amplitude(object, tt = attr(object, "tt"))

\method{summary}{mimf}(object, ...)

\method{print}{summary.mimf}(x, ...)
}
\arguments{
\item{object}{A \code{mimf} object resulting from a call to \code{memd}.}

\item{tt}{A vector of custom time indices.}

\item{...}{Additional parameters to be passed to the function
\code{\link[base]{format}} for the print method.}

\item{x}{An object of class \code{summary.mimf} resulting from a call to
\code{summary.mimf}.}
}
\value{
\code{period} and \code{mean_amplitude} both return a \emph{nimfs} x 
   \emph{nvariables} matrix containing the mean period and mean amplitude
   respectively.

   \code{summary} return a list containing the mean periods, mean
   amplitudes, and the relative difference between the original
   signal and its reconstruction when EEMD is used.
}
\description{
\code{period} returns the mean period and \code{mean_amplitude} returns the 
   mean amplitude of each imf on \code{object}. \code{summary}
   wraps them up into a single object.
}
\details{
\code{period} computes the mean period of an IMF by counting its 
   number of zero crossing. The period then corresponds to twice the mean
   time difference between two zero crossings.

   \code{mean_amplitude} computes the root mean square amplitude of the IMF, 
   i.e. the square root of the sum of its squared values.

   \code{summary} computes the mean periods, amplitudes and a reconstruction
   error, i.e. the mean relative difference between the original series
   and the sum of IMFs. The \code{print} method allows pretty printing
   in the console.
}
\examples{
   library(dlnm)
   
   # Decompose both temperature and relative humidity with NA-MEMD
   # Adding two noise variables 
   X <- chicagoNMMAPS[,c("temp", "rhum")]
   set.seed(3)
   mimfs <- memd(X, l = 2) # Takes a couple of minutes
   cmimfs <- combine.mimf(mimfs, list(11:12, 13:19, 20:21), 
     new.names = c("C11", "C12", "r"))

   summary(cmimfs)

}
\seealso{
\code{\link{as.mimf}} to convert an array into a \code{mimf} object.
}
